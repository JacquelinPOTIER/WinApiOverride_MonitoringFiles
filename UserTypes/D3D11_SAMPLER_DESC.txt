typedef 
enum D3D11_FILTER
    {
        D3D11_FILTER_MIN_MAG_MIP_POINT	= 0,
        D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR	= 0x1,
        D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT	= 0x4,
        D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR	= 0x5,
        D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT	= 0x10,
        D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR	= 0x11,
        D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT	= 0x14,
        D3D11_FILTER_MIN_MAG_MIP_LINEAR	= 0x15,
        D3D11_FILTER_ANISOTROPIC	= 0x55,
        D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT	= 0x80,
        D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR	= 0x81,
        D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT	= 0x84,
        D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR	= 0x85,
        D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT	= 0x90,
        D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR	= 0x91,
        D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT	= 0x94,
        D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR	= 0x95,
        D3D11_FILTER_COMPARISON_ANISOTROPIC	= 0xd5,
        D3D11_FILTER_MINIMUM_MIN_MAG_MIP_POINT	= 0x100,
        D3D11_FILTER_MINIMUM_MIN_MAG_POINT_MIP_LINEAR	= 0x101,
        D3D11_FILTER_MINIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT	= 0x104,
        D3D11_FILTER_MINIMUM_MIN_POINT_MAG_MIP_LINEAR	= 0x105,
        D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_MIP_POINT	= 0x110,
        D3D11_FILTER_MINIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR	= 0x111,
        D3D11_FILTER_MINIMUM_MIN_MAG_LINEAR_MIP_POINT	= 0x114,
        D3D11_FILTER_MINIMUM_MIN_MAG_MIP_LINEAR	= 0x115,
        D3D11_FILTER_MINIMUM_ANISOTROPIC	= 0x155,
        D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_POINT	= 0x180,
        D3D11_FILTER_MAXIMUM_MIN_MAG_POINT_MIP_LINEAR	= 0x181,
        D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_LINEAR_MIP_POINT	= 0x184,
        D3D11_FILTER_MAXIMUM_MIN_POINT_MAG_MIP_LINEAR	= 0x185,
        D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_MIP_POINT	= 0x190,
        D3D11_FILTER_MAXIMUM_MIN_LINEAR_MAG_POINT_MIP_LINEAR	= 0x191,
        D3D11_FILTER_MAXIMUM_MIN_MAG_LINEAR_MIP_POINT	= 0x194,
        D3D11_FILTER_MAXIMUM_MIN_MAG_MIP_LINEAR	= 0x195,
        D3D11_FILTER_MAXIMUM_ANISOTROPIC	= 0x1d5
    } 	D3D11_FILTER;

typedef 
enum D3D11_TEXTURE_ADDRESS_MODE
    {
        D3D11_TEXTURE_ADDRESS_WRAP	= 1,
        D3D11_TEXTURE_ADDRESS_MIRROR	= 2,
        D3D11_TEXTURE_ADDRESS_CLAMP	= 3,
        D3D11_TEXTURE_ADDRESS_BORDER	= 4,
        D3D11_TEXTURE_ADDRESS_MIRROR_ONCE	= 5
    } 	D3D11_TEXTURE_ADDRESS_MODE;

typedef 
enum D3D11_COMPARISON_FUNC
    {
        D3D11_COMPARISON_NEVER	= 1,
        D3D11_COMPARISON_LESS	= 2,
        D3D11_COMPARISON_EQUAL	= 3,
        D3D11_COMPARISON_LESS_EQUAL	= 4,
        D3D11_COMPARISON_GREATER	= 5,
        D3D11_COMPARISON_NOT_EQUAL	= 6,
        D3D11_COMPARISON_GREATER_EQUAL	= 7,
        D3D11_COMPARISON_ALWAYS	= 8
    } 	D3D11_COMPARISON_FUNC;

typedef struct D3D11_SAMPLER_DESC
    {
    D3D11_FILTER Filter;
    D3D11_TEXTURE_ADDRESS_MODE AddressU;
    D3D11_TEXTURE_ADDRESS_MODE AddressV;
    D3D11_TEXTURE_ADDRESS_MODE AddressW;
    FLOAT MipLODBias;
    UINT MaxAnisotropy;
    D3D11_COMPARISON_FUNC ComparisonFunc;
    FLOAT BorderColor[ 4 ];
    FLOAT MinLOD;
    FLOAT MaxLOD;
    } 	D3D11_SAMPLER_DESC;

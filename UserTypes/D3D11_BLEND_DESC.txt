typedef 
enum D3D11_BLEND
    {
        D3D11_BLEND_ZERO	= 1,
        D3D11_BLEND_ONE	= 2,
        D3D11_BLEND_SRC_COLOR	= 3,
        D3D11_BLEND_INV_SRC_COLOR	= 4,
        D3D11_BLEND_SRC_ALPHA	= 5,
        D3D11_BLEND_INV_SRC_ALPHA	= 6,
        D3D11_BLEND_DEST_ALPHA	= 7,
        D3D11_BLEND_INV_DEST_ALPHA	= 8,
        D3D11_BLEND_DEST_COLOR	= 9,
        D3D11_BLEND_INV_DEST_COLOR	= 10,
        D3D11_BLEND_SRC_ALPHA_SAT	= 11,
        D3D11_BLEND_BLEND_FACTOR	= 14,
        D3D11_BLEND_INV_BLEND_FACTOR	= 15,
        D3D11_BLEND_SRC1_COLOR	= 16,
        D3D11_BLEND_INV_SRC1_COLOR	= 17,
        D3D11_BLEND_SRC1_ALPHA	= 18,
        D3D11_BLEND_INV_SRC1_ALPHA	= 19
    } 	D3D11_BLEND;

typedef 
enum D3D11_BLEND_OP
    {
        D3D11_BLEND_OP_ADD	= 1,
        D3D11_BLEND_OP_SUBTRACT	= 2,
        D3D11_BLEND_OP_REV_SUBTRACT	= 3,
        D3D11_BLEND_OP_MIN	= 4,
        D3D11_BLEND_OP_MAX	= 5
    } 	D3D11_BLEND_OP;

typedef 
enum D3D11_COLOR_WRITE_ENABLE
    {
        D3D11_COLOR_WRITE_ENABLE_RED	= 1,
        D3D11_COLOR_WRITE_ENABLE_GREEN	= 2,
        D3D11_COLOR_WRITE_ENABLE_BLUE	= 4,
        D3D11_COLOR_WRITE_ENABLE_ALPHA	= 8,
        D3D11_COLOR_WRITE_ENABLE_ALL	= ( ( ( D3D11_COLOR_WRITE_ENABLE_RED | D3D11_COLOR_WRITE_ENABLE_GREEN )  | D3D11_COLOR_WRITE_ENABLE_BLUE )  | D3D11_COLOR_WRITE_ENABLE_ALPHA ) 
    } 	D3D11_COLOR_WRITE_ENABLE;

typedef struct D3D11_RENDER_TARGET_BLEND_DESC
    {
    BOOL BlendEnable;
    D3D11_BLEND SrcBlend;
    D3D11_BLEND DestBlend;
    D3D11_BLEND_OP BlendOp;
    D3D11_BLEND SrcBlendAlpha;
    D3D11_BLEND DestBlendAlpha;
    D3D11_BLEND_OP BlendOpAlpha;
    UINT8 RenderTargetWriteMask;
    } 	D3D11_RENDER_TARGET_BLEND_DESC;

typedef struct D3D11_BLEND_DESC
    {
    BOOL AlphaToCoverageEnable;
    BOOL IndependentBlendEnable;
    D3D11_RENDER_TARGET_BLEND_DESC RenderTarget[ 8 ];
    } 	D3D11_BLEND_DESC;
